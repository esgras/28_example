# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.image_helper:
        class: AppBundle\Service\ImageHelper
        arguments: ['@service_container']
        public: true

    app.video_helper:
        class: AppBundle\Service\VideoHelper
        arguments: ['@service_container']
        public: true

    AppBundle\Service\FileUploader:
        arguments:
            $targetDir: '%app.image_temp_upload_directory%'
        public: true

    AppBundle\EventListener\ImageUploadEventListener:
        arguments: ['@AppBundle\Service\FileUploader', '@AppBundle\Service\ImageHelper',
                  '%app.image_temp_upload_directory%']
        tags:
           - { name: doctrine.event_listener, event: prePersist }
           - { name: doctrine.event_listener, event: preUpdate }
           - { name: doctrine.event_listener, event: postLoad }
           - { name: doctrine.event_listener, event: postPersist }
           - { name: doctrine.event_listener, event: postUpdate }
           - { name: doctrine.event_listener, event: preRemove }
           - { name: doctrine.event_listener, event: postRemove }

    AppBundle\EventListener\VideoUploadEventListener:
        arguments: ['@AppBundle\Service\FileUploader', '@AppBundle\Service\VideoHelper',
                  '%app.video_temp_upload_directory%']
        tags:
           - { name: doctrine.event_listener, event: prePersist }
           - { name: doctrine.event_listener, event: preUpdate }
           - { name: doctrine.event_listener, event: postPersist }
           - { name: doctrine.event_listener, event: postUpdate }
           - { name: doctrine.event_listener, event: postLoad }
           - { name: doctrine.event_listener, event: preRemove }
           - { name: doctrine.event_listener, event: postRemove }

    app.string_helper:
        class: AppBundle\Service\StringHelper
        arguments: ['@security.encoder_factory']
        public: true

    helpers.mailer:
          class: AppBundle\Service\Mailer
          arguments: ['@mailer', '%mail.admin_address%', '%mailer_name%']
          public: true

    app.security.authentication_handler:
        class: AppBundle\Handler\AuthenticationHandler
        public: false
        arguments: ["@router", '@session', "@security.token_storage",'@doctrine.orm.entity_manager' ,
              '%kernel.environment%']

    app.redirect_user_listener:
        class: AppBundle\EventListener\RedirectUserListener
        arguments:
            - "@security.token_storage"
            - "@router"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    app.payment:
        class: AppBundle\Service\Payment
#        arguments: ['%payment_live%', '%payment_username%', '%payment_password%']
        arguments: ['%payment_live%', '%payment_terminal_key%', '%payment_secret_key%']
        public: true

    app.twig_extension:
          class: AppBundle\Twig\AppExtension
          arguments: ["@security.authorization_checker", '@router']
          tags:
            - { name: twig.extension }

    app.landing_view:
        class: AppBundle\Service\Landing\LandingView
        arguments: ['%landing_templates_dir%']
        public: true

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
